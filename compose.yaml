services:
  postgres:
    image: postgres:15-alpine
    container_name: next-pg-auth-postgres
    hostname: pghost
    networks:
      - authnetwork
    platform: linux/amd64
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: users
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}']
      interval: 10s
      timeout: 5s
      retries: 5
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: next-pg-auth
    hostname: authhost
    networks:
      - authnetwork
    platform: linux/amd64
    restart: unless-stopped
    ports:
      - '3000:3000'
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@pghost:5432/users?schema=public
      ADMIN_EMAIL: admin@admin.com
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - /app/node_modules
      - ./app-setup:/app/app-setup
networks:
  authnetwork:
    driver: bridge
